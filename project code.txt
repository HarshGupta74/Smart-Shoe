const int trigPin = 2;
const int echoPin = 4;

void setup() {
  Serial.begin(9600);
  pinMode(6,OUTPUT);
  pinMode(7,OUTPUT);
  pinMode(9,INPUT);

}

void loop()

{
  long duration, inches, cm;
 
  pinMode(trigPin, OUTPUT);
  digitalWrite(trigPin, LOW);
 
  delayMicroseconds(2);

  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);

  digitalWrite(trigPin, LOW);
  pinMode(echoPin, INPUT);

  duration = pulseIn(echoPin, HIGH);
  inches = microsecondsToInches(duration);
  cm = microsecondsToCentimeters(duration);

  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm");
  Serial.println();
  delay(100);

  if(inches <= 5)
  {
    for(int i = 1; i <= 5;i++)
    {
      digitalWrite(6,1);
      digitalWrite(7,1);
      delay(500);
      digitalWrite(6,0);
      digitalWrite(7,0);
      delay(500);
     
    }
   
  }

if(digitalRead(9)==
}

long microsecondsToInches(long microseconds)
{
  return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds)
{
  return microseconds / 29 / 2;
}const int trigPin = 2;
const int echoPin = 4;

void setup() {
  Serial.begin(9600);
  pinMode(6,OUTPUT);
  pinMode(7,OUTPUT);
  pinMode(9,INPUT);

}

void loop()

{
  long duration, inches, cm;
 
  pinMode(trigPin, OUTPUT);
  digitalWrite(trigPin, LOW);
 
  delayMicroseconds(2);

  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);

  digitalWrite(trigPin, LOW);
  pinMode(echoPin, INPUT);

  duration = pulseIn(echoPin, HIGH);
  inches = microsecondsToInches(duration);
  cm = microsecondsToCentimeters(duration);

  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm");
  Serial.println();
  delay(100);

  if(inches <= 5)
  {
    for(int i = 1; i <= 5;i++)
    {
      digitalWrite(6,1);
      digitalWrite(7,1);
      delay(500);
      digitalWrite(6,0);
      digitalWrite(7,0);
      delay(500);
     
    }
   
  }

if(digitalRead(9)==
}

long microsecondsToInches(long microseconds)
{
  return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds)
{
  return microseconds / 29 / 2;
}